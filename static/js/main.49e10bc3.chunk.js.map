{"version":3,"sources":["components/main/Main.js","pages/Home.js","pages/Footer.js","components/resume/resume.js","components/editor/draftjsEditor.js","pages/About.js","pages/Post.js","pages/Posts.js","pages/Category1.js","components/code/PrismCode.js","components/category/menual/LifeCycle.js","components/category/menual/ReactEvent.js","pages/Category2.js","pages/Category3.js","components/Menu/Sidebar.js","shared/App.js","client/Root.js","serviceWorker.js","index.js","mocks/handlers.js","mocks/browser.js"],"names":["Main","className","Card","border","style","width","Header","Body","Title","Text","Home","Footer","Resume","props","_getHello","a","axios","get","res","console","log","handleConfirmPassword","e","setState","target","name","value","pMessage","blindStyle","state","password","rePassword","show","hello","this","cardStyle","borderLeft","borderRight","alignCenter","textAlign","verticalAlign","id","type","display","onChange","class","borderBottom","rowSpan","scope","colSpan","Component","TestEditorForm","useState","EditorState","createEmpty","editorState","setEditorState","wrapperClassName","editorClassName","toolbarClassName","toolbar","list","inDropdown","link","history","placeholder","localization","locale","onEditorStateChange","onClick","draftToHtml","convertToRaw","getCurrentContent","About","location","match","query","queryString","parse","search","element","params","Post","rows","map","data","i","push","Subtitle","Link","href","Posts","exact","path","url","render","component","Category1","first","last","handle","index","tableElement","domElement","src","PrismCode","code","language","useEffect","Prism","highlightAll","LifeCycle","wellowHighlight","backgroundColor","ReactEvent","dangerouslySetInnerHTML","__html","Category2","Category3","Navbar","bg","variant","sticky","Nav","Item","to","GoButton","useHistory","handleClick","btnCallback","Button","disabled","Sidebar","handleClose","Modal","onHide","backdrop","keyboard","App","Root","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","require","worker","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","handlers","rest","req","ctx","json","title","setupWorker"],"mappings":"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","file":"static/js/main.49e10bc3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Main.css';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Main = () => {\r\n    \r\n    return (\r\n        <div className=\"main\">\r\n           {/* <div className=\"card card-content\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                <a href=\"#\" className=\"card-link\">Detail</a>\r\n            </div>\r\n            </div> */}\r\n\r\n            <div className=\"row\">\r\n            <Card border=\"primary\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Primary Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card border=\"secondary\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Secondary Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card border=\"success\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Success Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card border=\"danger\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Danger Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card border=\"warning\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Warning Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card border=\"info\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Info Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card border=\"dark\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Dark Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  <Card border=\"light\" style={{ width: '18rem' }}>\r\n    <Card.Header>Header</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>Light Card Title</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n                {/* <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card title</h5>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"card-link\">Detail</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport Main from '../components/main/Main';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n          <Main />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n         <b> contact</b><br />themestory@naver.com\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './resume.css';\r\nimport axios from 'axios';\r\nimport { reset } from 'axe-core';\r\n\r\nclass Resume extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state  = {\r\n      password: '', // 첫번째 패스워드\r\n      rePassword: '', // 두번째 패스워드\r\n      pMessage:'패스워드를 입력하세요.', // 확인 메시지 (패스워드 일치여부를 사용자에게 알려주는 메시지)\r\n      show: false,\r\n      blindStyle: {\r\n        width:'100%'\r\n      },\r\n      hello : '',\r\n    };  // 초기 state값을 셋팅해준다. 빈 스트링 값은 false를 뜻한다.\r\n  }\r\n  componentDidMount() {\r\n    this._getHello();\r\n  }\r\n\r\n  _getHello = async() => {\r\n    const res = await axios.get('/api/testlist');\r\n    console.log('_getHello--', res)\r\n    // this.setState({ hello : res.data.hello })\r\n  }\r\n  handleConfirmPassword = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n    if (e.target.value !== '1234') {\r\n      this.setState({\r\n        pMessage: \"패스워드가 일치하지 않습니다.\",\r\n        // password: '',\r\n      }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n    } else {\r\n      this.setState({\r\n        blindStyle: {\r\n          width:'0%'\r\n        }\r\n        // password: '',\r\n      }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n\r\n    }\r\n    console.log('password--', this.state.password);\r\n  }\r\n  render() {\r\n    const cardStyle = {\r\n      borderLeft: '0px',\r\n      borderRight: '0px',\r\n    }\r\n    const borderNone = {\r\n      border: 'none'\r\n    }\r\n    const alignCenter = {\r\n      textAlign: 'center',\r\n      verticalAlign: 'middle'\r\n    }\r\n    const theadStyle = {\r\n      borderBottom: '1px'\r\n    }\r\n    const bilndInputStyle = {\r\n      width: '30%',\r\n      display: 'inline-block'\r\n    }\r\n      return (\r\n        <div>\r\n        <div id=\"myNav\" className=\"overlay\" style={this.state.blindStyle}>\r\n          <div className=\"overlay-content\">\r\n          <input type=\"password\" name=\"password\" className=\"form-control\" \r\n              style={bilndInputStyle}\r\n              value={this.state.password}\r\n              onChange={this.handleConfirmPassword} />\r\n              <span className=\"message-p\">{this.state.pMessage}</span>\r\n          </div>\r\n        </div>\r\n          <div class=\"container\">\r\n            {/* <div className=\"content-dimmed\"></div> */}\r\n            <div class=\"card\" style={cardStyle}>\r\n              <div class=\"row g-0\">\r\n                <div class=\"col-md-2\">\r\n                  <div className=\"card-body\">\r\n                    <h5 class=\"card-title\">Profile</h5>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-10\">\r\n                  <div class=\"card-body\">\r\n                    <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                    {/* <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\" style={cardStyle}>\r\n              <div class=\"row g-0\">\r\n                <div class=\"col-md-2\">\r\n                  <div className=\"card-body\">\r\n                    {/* <h5 class=\"card-title\">Work Experience(technical)</h5> */}\r\n                    <h5 class=\"card-title\">Skills</h5>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-10\">\r\n                  <div class=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"resume\">\r\n  \r\n                    <table className=\"table table-responsive align-middle table-bordered\">\r\n                      <thead style={theadStyle}>\r\n                        <tr className=\"align-items-center\" style={alignCenter}>\r\n                          <th rowSpan=\"2\" scope=\"col\">Project</th>\r\n                          <th rowSpan=\"2\" scope=\"col\">Experience</th>\r\n                          <th colSpan=\"3\" scope=\"colgroup\" style={borderNone}>development</th>\r\n                        </tr>\r\n                        <tr style={alignCenter}>\r\n                          <th scope=\"col\">Tool</th>\r\n                          <th scope=\"col\">DBMS</th>\r\n                          <th scope=\"col\">WAS</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                     \r\n                        <tr>\r\n                          <td>도로 시설물 재난관리 재난 관리체계 구축</td>\r\n                          <td>2011.08~2012.12</td>\r\n                          <td>Java, jQuery, JSP, HTML, Spring Framework</td>\r\n                          <td>Oracle</td>\r\n                          <td>tomcat,jeus</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>LG하우시스 대리점시스템 운영</td>\r\n                          <td>2013.01~2014.05</td>\r\n                          <td>JAVA, JSP/Jstl, HTML, jQuery, JavaScript, Stored Procedure, json</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat, WebSphere</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>LG하우시스 직영점시스템 구축</td>\r\n                          <td>2014.05 ~2014.07</td>\r\n                          <td>Java, XML, DevOn, Miplatform</td>\r\n                          <td>Oracle</td>\r\n                          <td>tomcat</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>국민권익위원회 행정심판 허브 시스템 구축</td>\r\n                          <td>2014.09~2014.12</td>\r\n                          <td>Java,JQuery,JavaScript,Ajax, Spring framework</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat,JBOSS</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>저작권 통합 관리 시스템 운영</td>\r\n                          <td>2015.02~2015.06</td>\r\n                          <td>Java, XML, Spring framework, Miplatform</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat,jeus</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>사회보장정보시스템 고도화</td>\r\n                          <td>2015.06~2015.09</td>\r\n                          <td>Java, XML, anyframe, Miplatform, egov</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat,jeus</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>대검찰청 업무시스템 Kics 고도화</td>\r\n                          <td>2015.09~2015.12</td>\r\n                          <td>Java, XML, EJB, Trustform,laf/j</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat,jeus</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Acubed 반도체 장비 분석 차트 시스템 프론트엔드 개발</td>\r\n                          <td>2016.01~2017.03</td>\r\n                          <td>AngularJS, AngularJS2, Typescript, Javascript, npm, node.js, jQuery, css, html5, c3js, d3js, , Wijmo5,unserscreJS, Spring framework</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>MIPlatform 반도체 장비 분석 차트 시스템 프론트엔드 개발</td>\r\n                          <td>2017.03~2017.09</td>\r\n                          <td>AngularJS2, AngularJS4, Typescript, Javascript, npm, node.js, rxJS, jQuery, c3js, d3js, css, html5 unserscreJS, Wijmo5</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>AP Mall CX 리뉴얼</td>\r\n                          <td>2017.09~2017.12</td>\r\n                          <td>Java, JQuery, JavaScript, jsp, Jstl, xml. Ajax, SiteMesh, Spring framework</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>onstove 게임 플랫폼 개발 및 운영 유지보수</td>\r\n                          <td>2018.02~2018.12</td>\r\n                          <td>Vue, ES6, Javascript, npm, node.js, jQuery, css, html5, lodash</td>\r\n                          <td>Oracle</td>\r\n                          <td>Tomcat</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Edge&Next 클라우드 HIS 솔루션 개발 </td>\r\n                          <td>2019.01~2021.07</td>\r\n                          <td>Ember.js, ES6, javascript, yarn, nodejs, jQuery</td>\r\n                          <td></td>\r\n                          <td></td>\r\n                        </tr>\r\n                      \r\n                      </tbody>\r\n                    </table>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\" style={cardStyle}>\r\n              <div class=\"row g-0\">\r\n                <div class=\"col-md-2\">\r\n                <div className=\"card-body\">\r\n                  <h5 class=\"card-title\">Education</h5>\r\n                </div>\r\n                </div>\r\n                <div class=\"col-md-10\">\r\n                  <div class=\"card-body\">\r\n                    <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                    {/* <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n      );\r\n  }\r\n\r\n};\r\n\r\nexport default Resume;","import React, { useState } from 'react';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { EditorState, convertToRaw  } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nconst TestEditorForm = () => {\r\n  // useState로 상태관리하기 초기값은 EditorState.createEmpty()\r\n  // EditorState의 비어있는 ContentState 기본 구성으로 새 개체를 반환 => 이렇게 안하면 상태 값을 나중에 변경할 수 없음.\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n  const onEditorStateChange = (editorState) => {\r\n    // editorState에 값 설정\r\n    setEditorState(editorState);\r\n  };\r\n  const editorToHtml = () => {\r\n    return console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Editor\r\n        // 에디터와 툴바 모두에 적용되는 클래스\r\n        wrapperClassName=\"wrapper-class\"\r\n        // 에디터 주변에 적용된 클래스\r\n        editorClassName=\"editor\"\r\n        // 툴바 주위에 적용된 클래스\r\n        toolbarClassName=\"toolbar-class\"\r\n        // 툴바 설정\r\n        toolbar={{\r\n          // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\r\n          list: { inDropdown: true },\r\n          textAlign: { inDropdown: true },\r\n          link: { inDropdown: true },\r\n          history: { inDropdown: false },\r\n        }} \r\n        placeholder=\"내용을 작성해주세요.\"\r\n        // 한국어 설정\r\n        localization={{\r\n          locale: 'ko',\r\n        }}\r\n        // 초기값 설정\r\n        editorState={editorState}\r\n        // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\r\n        onEditorStateChange={onEditorStateChange}\r\n      />\r\n        <button className=\"btn btn-warning\" onClick={editorToHtml}>\r\n            convert\r\n        </button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestEditorForm;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport Resume from '../components/resume/resume';\r\nimport TestEditorForm from '../components/editor/draftjsEditor';\r\n\r\nconst About = ({location, match}) => {\r\n    const query = queryString.parse(location.search);\r\n    let element = <h2>About {match.params.name}</h2>;\r\n    if(match.params.name === 'resume') {\r\n        element = <Resume />\r\n    }else if(match.params.name === 'sub1') {\r\n        element = <TestEditorForm />\r\n    }\r\n    console.log(query);\r\n    return (\r\n        <div>\r\n            {element}\r\n            {/* <h2>About {match.params.name}</h2>\r\n            <Resume /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Post = ({match}) => {\r\n    const rows = [];\r\n    const numrows = [{\"id\" : 1, \"name\" : \"abc\"}, {\"id\" : 2, \"name\" : \"abc\"}, {\"id\" : 3, \"name\" : \"abc\"}];\r\n    numrows.map((data, i) => {\r\n        return rows.push(\r\n            <Card style={{ width: '18rem' }} id={data.id} key={i}>\r\n            <Card.Body>\r\n                <Card.Title>Card Title</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n                <Card.Text>\r\n                Some quick example text to build on the card title and make up the bulk of\r\n                the card's content.\r\n                </Card.Text>\r\n                <Card.Link href=\"#\">Card Link</Card.Link>\r\n                <Card.Link href=\"#\">Another Link</Card.Link>\r\n            </Card.Body>\r\n            </Card>\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n            포스트 {match.params.id}\r\n            {rows}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Post from './Post'; \r\n\r\nconst Posts = ({match}) => {\r\n    return (\r\n        <div>\r\n           {/* <ul>\r\n                <li><Link to={`${match.url}/1`}>Post #1</Link></li>\r\n                <li><Link to={`${match.url}/2`}>Post #2</Link></li>\r\n                <li><Link to={`${match.url}/3`}>Post #3</Link></li>\r\n                <li><Link to={`${match.url}/4`}>Post #4</Link></li>\r\n           </ul> */}\r\n           <Route exact path={match.url} render={()=>(<h3>Please select any post</h3>)}/>\r\n           <Route path={`${match.url}/:id`} component={Post}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nconst Category1 = ({location, match}) => {\r\n    const query = queryString.parse(location.search);\r\n    console.log(query);\r\n    const rows = [];\r\n    const datas = [\r\n      {first: 'Mark', last: 'Otto', handle: '@mdo'},\r\n      {first: 'Jacob', last: 'Thornton', handle: '@fat'},\r\n      {first: 'Larry the Bird', last: '', handle: '@twitter'},\r\n      {first: 'Jone', last: 's', handle: '@mdo'},\r\n    ]\r\n    datas.map((data, index) => {\r\n      return rows.push(\r\n        <tr>\r\n          <th scope=\"row\">{index+1}</th>\r\n          <td>{data.first}</td>\r\n          <td>{data.last}</td>\r\n          <td>{data.handle}</td>\r\n        </tr>\r\n      )\r\n    });\r\n    const tableElement = <div>\r\n        <table className=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">First</th>\r\n            <th scope=\"col\">Last</th>\r\n            <th scope=\"col\">Handle</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows}\r\n          {/* <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td colSpan=\"2\">Larry the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr> */}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    let domElement = \r\n    <div class=\"clearfix\">\r\n      {/* <Image src=\"holder.js/171x180\" className=\"col-md-6 float-md-end mb-3 ms-md-3\" rounded /> */}\r\n  <img src=\"...\" className=\"col-md-6 float-md-end mb-3 ms-md-3\" />\r\n\r\n  <p>\r\n    A paragraph of placeholder text. We're using it here to show the use of the clearfix class. We're adding quite a few meaningless phrases here to demonstrate how the columns interact here with the floated image.\r\n  </p>\r\n\r\n  <p>\r\n    As you can see the paragraphs gracefully wrap around the floated image. Now imagine how this would look with some actual content in here, rather than just this boring placeholder text that goes on and on, but actually conveys no tangible information at. It simply takes up space and should not really be read.\r\n  </p>\r\n\r\n  <p>\r\n    And yet, here you are, still persevering in reading this placeholder text, hoping for some more insights, or some hidden easter egg of content. A joke, perhaps. Unfortunately, there's none of that here.\r\n  </p>\r\n</div>;\r\n    if(match.params.name === 'sub') {\r\n      domElement = tableElement;\r\n    }\r\n    return (\r\n      <div>\r\n        {domElement}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Category1;","import React, { useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\n\r\nconst PrismCode = ({ code, language }) => {\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, []);\r\n  return (\r\n    <div className=\"Code\">\r\n      <pre>\r\n        <code className={`language-${language}`}>{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\nexport default PrismCode;\r\n","import React from 'react';\r\nimport './stickyContent.css';\r\nimport Code from '../../code/PrismCode';\r\nconst LifeCycle = () => {\r\n  const code1 = `constructor(props)`;\r\n  const code2 = `constructor(props) {\r\n    super(props);\r\n    // 여기서 this.setState()를 호출하면 안 됩니다!\r\n    this.state = { counter: 0 };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }`;\r\n  const code3 = `constructor(props) {\r\n    super(props);\r\n    // 이렇게 하지 마세요!\r\n    this.state = { color: props.color };\r\n   }`;\r\n   const code4 = `componentDidMount()`;\r\n   const code5 = `componentDidUpdate(prevProps, prevState, snapshot)`;\r\n   const code6 = `componentDidUpdate(prevProps) {\r\n    // 전형적인 사용 사례 (props 비교를 잊지 마세요)\r\n    if (this.props.userID !== prevProps.userID) {\r\n      this.fetchData(this.props.userID);\r\n    }\r\n  }`;\r\n  const code7 = `componentWillUnmount()`;\r\n  // const wellowHighlight = 'background-color: rgb(247,218,100);';\r\n  const wellowHighlight = {\r\n    backgroundColor: 'rgb(247,218,100)'\r\n  }\r\n  return (\r\n        <div className=\"bd-main\">\r\n            {/* <h2>Category2 {match.params.name}</h2> */}\r\n          <div class=\"bd-toc mt-4 mb-5 my-md-0 ps-xl-3 mb-lg-5 text-muted\">\r\n          <strong class=\"d-block h6 my-2 pb-2 border-bottom\">On this page</strong>\r\n          <nav id=\"TableOfContents\">\r\n            <ul>\r\n              <li><a href=\"#mounting\">Mounting</a>\r\n                <ul>\r\n                  <li><a href=\"#constructor\">constructor()</a></li>\r\n                  <li><a href=\"#componentDidMount\">componentDidMount()</a></li>\r\n                </ul>\r\n              </li>\r\n              <li><a href=\"#updating\">updating</a>\r\n                <ul>\r\n                  <li><a href=\"#componentDidUpdate\">componentDidUpdate()</a></li>\r\n                </ul>\r\n              </li>\r\n              <li><a href=\"#unmounting\">unmounting</a>\r\n                <ul>\r\n                  <li><a href=\"#componentWillUnmount\">componentWillUnmount()</a></li>\r\n                </ul>\r\n              </li>\r\n              {/* <li><a href=\"#example-with-list-group\">Example with list-group</a></li>\r\n              <li><a href=\"#usage\">Usage</a>\r\n                <ul>\r\n                  <li><a href=\"#via-data-attributes\">Via data attributes</a></li>\r\n                  <li><a href=\"#via-javascript\">Via JavaScript</a></li>\r\n                  <li><a href=\"#methods\">Methods</a>\r\n                    <ul>\r\n                      <li><a href=\"#refresh\">refresh</a></li>\r\n                      <li><a href=\"#dispose\">dispose</a></li>\r\n                      <li><a href=\"#getinstance\">getInstance</a></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li><a href=\"#options\">Options</a></li>\r\n                  <li><a href=\"#events\">Events</a></li>\r\n                </ul>\r\n              </li> */}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"bd-content ps-lg-4\">\r\n          <h2 id=\"mounting\">Mounting<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#mounting\"></a></h2>\r\n          <p>컴포넌트의 인스턴스가 생성되어 DOM 상에 삽입될 때에 순서대로 호출</p>\r\n          <ul>\r\n            <li>constructor()</li>\r\n            <li>getDerivedStateFromProps()</li>\r\n            <li><code>render()</code></li>\r\n            <li>componentDidMount()</li>\r\n          </ul>\r\n          <h2 id=\"updating\">Updating<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#updating\"></a></h2>\r\n          <p>props 또는 state가 변경되면 갱신이 발생</p>\r\n          <ul>\r\n            <li>getDerivedStateFromProps()</li>\r\n            <li>shouldComponentUpdate()</li>\r\n            <li><code>render()</code></li>\r\n            <li>getSnapshotBeforeUpdate()</li>\r\n            <li>componentDidUpdate()</li>\r\n          </ul>\r\n          <h2 id=\"unmounting\">Unmounting<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#unmounting\"></a></h2>\r\n          <p>컴포넌트가 DOM 상에서 제거될 때에 호출</p>\r\n          <ul>\r\n            <li>componentWillUnmount()</li>\r\n          </ul>\r\n\r\n          <h3 id=\"constructor\">constructor()<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#constructor\"></a></h3>\r\n          <Code code={code1} language=\"javascript\" />\r\n          <p><strong>메서드를 바인딩하거나 state를 초기화하는 작업이 없다면, 해당 React 컴포넌트에는 생성자를 구현하지 않아도 됩니다.</strong></p>\r\n          <p>React 컴포넌트의 생성자는 해당 컴포넌트가 마운트되기 전에 호출됩니다. <span style={wellowHighlight}>React.Component</span>를 상속한 컴포넌트의 생성자를 구현할 때에는 다른 구문에 앞서<span style={wellowHighlight}> super(props)</span>를 호출해야 합니다. 그렇지 않으면 <span style={wellowHighlight}>this.props</span>가 생성자 내에서 정의되지 않아 버그로 이어질 수 있습니다.</p>\r\n          <p>React에서 생성자는 보통 아래의 두 가지 목적을 위하여 사용됩니다</p>\r\n          <ul>\r\n          <li>this.state에 객체를 할당하여 지역 state를 초기화</li>\r\n          <li>인스턴스에 이벤트 처리 메서드를 바인딩</li>\r\n          </ul>\r\n          <p><span style={wellowHighlight}>constructor() </span>내부에서<strong> setState()를 호출하면 안 됩니다.</strong> 컴포넌트에 지역 state가 필요하다면 생성자 내에서 <span style={wellowHighlight}>this.state</span>에 초기 state 값을 할당하면 됩니다.</p>\r\n          <Code code={code2} language=\"javascript\" />\r\n          <p>생성자는 <span style={wellowHighlight}>this.state</span>를 직접 할당할 수 있는 유일한 곳입니다. 그 외의 메서드에서는<span style={wellowHighlight}> this.setState()</span>를 사용해야 합니다.</p>\r\n          <p>생성자 내에서는 부수 효과를 발생시키거나 구독 작업(subscription)을 수행하면 안 됩니다. 해당 경우에는 <span style={wellowHighlight}>componentDidMount()</span>를 대신 사용하세요.</p>\r\n          <p></p>\r\n          <p><strong>주의</strong></p>\r\n          <p><strong>state에 props를 복사하면 안 됩니다! 가장 흔히 범하는 실수 중 하나입니다.</strong></p>\r\n          <Code code={code3} language=\"javascript\" />\r\n          <p>이것은 불필요한 작업이며(<span style={wellowHighlight}>this.props.color</span>를 직접 사용하면 됩니다), 버그를 발생시킵니다(<span style={wellowHighlight}>color</span> props의 값이 변하더라도 state에 반영되지 않습니다).</p>\r\n          <p></p>\r\n          <p><strong>props의 갱신을 의도적으로 무시해야 할 때만 이와 같은 패턴을 사용하기 바랍니다.</strong> 이 경우, 해당 props의 이름을<span style={wellowHighlight}> initialColor</span> 또는 <span style={wellowHighlight}>defaultColor</span> 등으로 변경하는 편이 자연스럽습니다. 그러면 이후 필요에 따라 컴포넌트가 key를 변경하여 초기 state를 “재설정”하도록 강제할 수 있습니다.</p>\r\n          <p></p>\r\n          <h3 id=\"componentDidMount\">componentDidMount()<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#componentDidMount\"></a></h3>\r\n          <Code code={code4} language=\"javascript\" />\r\n          <p><span style={wellowHighlight}>componentDidMount()</span>\r\n          는 컴포넌트가 마운트된 직후, 즉 트리에 삽입된 직후에 호출됩니다. DOM 노드가 있어야 하는 초기화 작업은 이 메서드에서 이루어지면 됩니다.\r\n          외부에서 데이터를 불러와야 한다면, 네트워크 요청을 보내기 적절한 위치입니다.</p>\r\n          <p>이 메서드는 데이터 구독을 설정하기 좋은 위치입니다. 데이터 구독이 이루어졌다면,\r\n          <span style={wellowHighlight}>componentWillUnmount()</span>에서 구독 해제 작업을 반드시 수행하기 바랍니다.</p>\r\n          <p><span style={wellowHighlight}>componentDidMount()</span>에서 <strong>즉시 setState()를 호출하는 경우도</strong> 있습니다.\r\n          이로 인하여 추가적인 렌더링이 발생하지만, 브라우저가 화면을 갱신하기 전에 이루어질 것입니다. 이 경우 <span style={wellowHighlight}>render()</span>가 두 번 호출되지만, \r\n          사용자는 그 중간 과정을 볼 수 없을 것입니다. 이런 사용 방식은 성능 문제로 이어지기 쉬우므로 주의가 필요합니다. 대부분의 경우, 앞의 방식을 대신하여 \r\n          <span style={wellowHighlight}>constructor()</span> 메서드에서 초기 state를 할당할 수 있습니다.\r\n           하지만 모달(Modal) 또는 툴팁과 같이 렌더링에 앞서 DOM 노드의 크기나 위치를 먼저 측정해야 하는 경우 이러한 방식이 필요할 수 있습니다.</p>\r\n           <h3 id=\"componentDidUpdate\">componentDidUpdate()<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#componentDidUpdate\"></a></h3>\r\n           <Code code={code5} language=\"javascript\" />\r\n           <p><span style={wellowHighlight}>componentDidUpdate()</span>는 갱신이 일어난 직후에 호출됩니다. 이 메서드는 최초 렌더링에서는 호출되지 않습니다.</p>\r\n            <p>컴포넌트가 갱신되었을 때 DOM을 조작하기 위하여 이 메서드를 활용하면 좋습니다. 또한, 이전과 현재의 props를 비교하여 네트워크 요청을 보내는 작업도 이 메서드에서 이루어지면 됩니다 (가령, props가 변하지 않았다면 네트워크 요청을 보낼 필요가 없습니다).</p>\r\n\r\n           <Code code={code6} language=\"javascript\" />\r\n           <p><strong>주의</strong></p>\r\n          <p><span style={wellowHighlight}>componentDidUpdate()</span>는 <ins>shouldComponentUpdate()</ins>가 false를 반환하면 호출되지 않습니다.</p>\r\n          <h3 id=\"componentWillUnmount\">componentWillUnmount()<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#componentWillUnmount\"></a></h3>\r\n          <Code code={code7} language=\"javascript\" />\r\n          <p><span style={wellowHighlight}>componentWillUnmount()</span>는 컴포넌트가 마운트 해제되어 제거되기 직전에 호출됩니다. 이 메서드 내에서 타이머 제거, 네트워크 요청 취소,\r\n          <span style={wellowHighlight}>componentDidMount()</span> 내에서 생성된 구독 해제 등 필요한 모든 정리 작업을 수행하세요.</p>\r\n          <p>이제 컴포넌트는 다시 렌더링되지 않으므로, <span style={wellowHighlight}>componentWillUnmount()</span> 내에서 <strong>setState()를 호출하면 안 됩니다.</strong>\r\n          컴포넌트 인스턴스가 마운트 해제되고 나면, 절대로 다시 마운트되지 않습니다.</p>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default LifeCycle;","import React from 'react';\r\nimport Code from '../../code/PrismCode';\r\n\r\nconst html = ``;\r\nconst ReactEvent = () => {\r\n  const code1 = `class Robot extends React.Component {\r\n    render(){\r\n      return (\r\n        <button onClick={this.doAction}>Action!</button>\r\n      )\r\n    }\r\n    doAction(){\r\n      alert(\"ok\");\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(<Robot />, document.getElementById(\"root\"));`;\r\n  const code2 = `doAction = () => {\r\n    alert(this);\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    this.doAction = this.doAction.bind(this)\t// constructor 에서 bind 함.\r\n  }\r\n    \r\n  doAction() {\r\n    alert(this);\r\n  }`;\r\n  const code3 = `class Robot extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n    render(){\r\n      return (\r\n        <button onClick={() => this.doAction(\"run\") }>Action!</button>\r\n      )\r\n    }\r\n    doAction = (action)=>{\r\n      alert(this.props.def_action + \" -> \" + action);\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(<Robot def_action=\"walk\" />, document.getElementById(\"root\"));`;\r\n  const code4 = ` render(){\r\n    return (\r\n      <button onClick={this.doAction.bind(this, \"run\") }>Action!</button>\r\n    )\r\n  }\r\n <button onClick={this.doAction.bind(this, \"run\") }>Action!</button> // 버튼클릭 시 작동\r\n <button onClick={this.doAction(this, \"run\") }>Action!</button>      // 페이지 load 시 작동`;\r\n const code5 = `class Robot extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    return (\r\n      <button onClick={this.doAction.bind(this, \"run\") }>Action!</button>\r\n    )\r\n  }\r\n  doAction = (action, lastParamIsEventObject)=>{\r\n    alert(this.props.def_action + \" -> \" + action + \" : \" + lastParamIsEventObject.type);\r\n  }\r\n}\r\n\r\nReactDOM.render(<Robot def_action=\"walk\" />, document.getElementById(\"root\"));`;\r\nconst code6 = `render(){\r\n  return (\r\n    <button onClick={(evnt)=>this.doAction(\"run\", evnt) }>Action!</button>\r\n  )\r\n}`;\r\n  return (\r\n    <div>\r\n      <div dangerouslySetInnerHTML ={{__html: html}} />\r\n      <p><strong>기본적인 이벤트 사용</strong></p>\r\n      <Code code={code1} language=\"javascript\" />\r\n\r\n      <p><strong>doAction  안에서 this 를 Bind 하고 싶을 때.</strong></p>\r\n      <Code code={code2} language=\"javascript\" />\r\n\r\n      <p><strong>파라메터 전송</strong></p>\r\n      <p>1. 이벤트를 arrow function&nbsp;</p>\r\n      <Code code={code3} language=\"javascript\" />\r\n      <p>2. 이벤트에서 bind</p>\r\n      <Code code={code4} language=\"javascript\" />\r\n\r\n      <p><strong>Event Object </strong></p>\r\n      <Code code={code5} language=\"javascript\" />\r\n      <p>명시적</p>\r\n      <Code code={code6} language=\"javascript\" />\r\n    </div>\r\n  );\r\n\r\n};\r\nexport default ReactEvent;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport './stickyContent.css';\r\nimport LifeCycle from '../components/category/menual/LifeCycle';\r\nimport ReactEvent from '../components/category/menual/ReactEvent';\r\nconst Category2 = ({location, match}) => {\r\n    const query = queryString.parse(location.search);\r\n    let element = <h2>About {match.params.name}</h2>;\r\n    console.log(query);\r\n    if(match.params.name === 'sub') {\r\n      element = <LifeCycle />\r\n    } else if(match.params.name === 'sub1') {\r\n      element = <ReactEvent />\r\n    }\r\n  return (\r\n       <div>\r\n         {element}\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default Category2;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport PostList from '../components/Menu/sub/PostList';\r\nimport { Route, NavLink, Link } from 'react-router-dom';\r\nimport Posts from './Posts';\r\nimport Post from './Post';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst Category3 = ({location, match}) => {\r\n    const query = queryString.parse(location.search);\r\n    console.log(query);\r\n    return (\r\n        <div>\r\n  <Navbar bg=\"light\" variant=\"light\" sticky=\"top\" className=\"shadow p-3 mb-5 bg-body rounded\">\r\n  {/* <Navbar variant=\"dark\" sticky=\"top\" className=\"bg-secondary bg-gradient text-white\"> */}\r\n    {/* <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand> */}\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Item className=\"nav-link px-2 text-white\">\r\n        <Link to={`${match.url}/1`} className=\"nav-link\"><span className=\"btn btn-outline-dark me-2\">Post #1</span></Link>\r\n\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-link px-2 text-white\">\r\n        {/* <Nav.Link href={`${match.url}/2`}><span className=\"btn btn-outline-dark me-2\">Post #2</span></Nav.Link> */}\r\n        <Link to={`${match.url}/2`} className=\"nav-link\"><span className=\"btn btn-outline-dark me-2\">Post #2</span></Link>\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-link px-2 text-white\">\r\n      <Link to={`${match.url}/3`} className=\"nav-link\"><span className=\"btn btn-outline-dark me-2\">Post #3</span></Link>\r\n      </Nav.Item>\r\n      <Nav.Item className=\"nav-link px-2 text-white\">\r\n        <Link to={`${match.url}/4`} className=\"nav-link\"><span className=\"btn btn-outline-dark me-2\">Post #4</span></Link>\r\n      </Nav.Item>\r\n     \r\n    </Nav>\r\n  </Navbar>           \r\n   {/* <h2>Category3 {match.params.name}</h2> */}\r\n        <div>\r\n           <Route exact path={match.url} render={()=>(<Route path={`${match.url}/1`} component={Post}/>)}/>\r\n           <Route path={`${match.url}/:id`} component={Post}/>\r\n        </div>\r\n            {/* <Route path=\"/posts\" component={PostList}/>\r\n            <Route path=\"/posts\" component={Posts}/>\r\n            <NavLink to=\"/posts\" className=\"nav-title\">Posts</NavLink> */}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Category3;","import React, { Component } from 'react';\r\n// import { Route } from 'react-router-dom';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport './Sidebar.css';\r\n// import PostList from './sub/PostList';\r\n// import { Nav } from 'react-bootstrap';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n// const histpry = () => {\r\n//   const history = useHistory();\r\n//   // history를 props에서 얻어왔을 때 처럼 동일하게 사용 가능하다.\r\n  \r\n//   return (\r\n//     history.push('/about')\r\n//   );\r\n// };\r\nfunction GoButton(props) {\r\n  let history = useHistory();\r\n  function handleClick() {\r\n    history.push(\"/about/resume\");\r\n    props.btnCallback();\r\n  }\r\n  if(props.password === '1234') {\r\n    return (\r\n      <Button variant=\"primary\" onClick={handleClick}>Ok</Button>\r\n    );\r\n  } else {\r\n    return (\r\n      <Button variant=\"primary\" onClick={handleClick} disabled>Ok</Button>\r\n    );\r\n  }\r\n// return (\r\n//     {element}\r\n//   );\r\n}\r\nclass Sidebar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state  = {\r\n      password: '', // 첫번째 비밀번호\r\n      rePassword: '', // 두번째 비밀번호\r\n      pMessage:'', // 확인 메시지 (비밀번호 일치여부를 사용자에게 알려주는 메시지)\r\n      show: false\r\n    };  // 초기 state값을 셋팅해준다. 빈 스트링 값은 false를 뜻한다.\r\n  }\r\n  handleConfirmPassword = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n    if (e.target.value !== '1234') {\r\n      this.setState({\r\n        pMessage: \"비밀번호가 일치하지 않습니다.\",\r\n        // password: '',\r\n      }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n    }\r\n    console.log('password--', this.state.password);\r\n  }\r\n  render() {\r\n    // const [show, setShow] = useState(false);\r\n    // const [password, setPassword, getPassword] = useState();\r\n  \r\n    const handleClose = () => {\r\n      this.setState({\r\n        show: false,\r\n        password: ''\r\n      });\r\n    };\r\n    const handleShow = () => {\r\n      this.setState({show: true});\r\n    }\r\n    const handleSubmit = () => {\r\n      // const password = getPassword;\r\n      \r\n      console.log('password--', this.state.password);\r\n    }\r\n    const handleConfirmPassword = () => {\r\n      console.log('password--', this.state.password);\r\n    }\r\n  \r\n    return (\r\n      <div className=\"p-3 bg-white sidebar-container overflow-auto\">\r\n      <a href=\"/\" className=\"d-flex align-items-center pb-3 mb-3 link-dark text-decoration-none border-bottom\">\r\n        <span className=\"fs-5 fw-semibold\">Category</span>\r\n      </a>\r\n      <ul className=\"list-unstyled ps-0\">\r\n        {/* <li className=\"mb-1\">\r\n          <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#home-collapse\" aria-expanded=\"false\">\r\n            Home\r\n          </button>\r\n          <div className=\"collapse\" id=\"home-collapse\">\r\n            <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Overview</a></li>\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Updates</a></li>\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Reports</a></li>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n        <li className=\"mb-1\">\r\n          <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#about-collapse\" aria-expanded=\"false\">\r\n          About\r\n          </button>\r\n          <div className=\"collapse\" id=\"about-collapse\">\r\n            <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\r\n              {/* <li><NavLink exact to=\"/about/sub1\" className=\"link-dark rounded\">About 1</NavLink></li>\r\n              <li><NavLink exact to=\"/about/sub2\" className=\"link-dark rounded\">About 2</NavLink></li> */}\r\n              <li><span className=\"link-dark rounded\" onClick={handleShow}>Resume</span></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        {/* <li className=\"mb-1\">\r\n          <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#dashboard-collapse\" aria-expanded=\"false\">\r\n            Dashboard\r\n          </button>\r\n          <div className=\"collapse\" id=\"dashboard-collapse\">\r\n            <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Overview</a></li>\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Weekly</a></li>\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Monthly</a></li>\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Annually</a></li>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n        <li className=\"border-top my-3\"></li>\r\n        <li className=\"mb-1\">\r\n          <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#category1-collapse\" aria-expanded=\"false\">\r\n          {/* <Nav.Link href=\"#category1-sub\">\r\n            </Nav.Link> */}\r\n            Util\r\n          </button>\r\n          {/* <a href=\"#category1-sub\" role=\"button\" className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#category1-collapse\" aria-expanded=\"false\">Category1</a> */}\r\n          {/* <Nav.Link role=\"button\" href=\"#category1-sub\" className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#category1-collapse\" aria-expanded=\"false\">Category1</Nav.Link> */}\r\n          <div className=\"collapse\" id=\"category1-collapse\" data-bs-spy=\"scroll\">\r\n            <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\r\n              <li><NavLink exact to=\"/about/sub1\" className=\"link-dark rounded\">Editor</NavLink></li>\r\n              {/* <li><NavLink exact to=\"/category1\" className=\"link-dark rounded\" id=\"category1-sub\"> sub category 1</NavLink></li>\r\n              <li><NavLink exact to=\"/category1/sub\" className=\"link-dark rounded\"> sub category 2</NavLink></li> */}\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li className=\"mb-1\">\r\n          <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#category2-collapse\" aria-expanded=\"false\">\r\n             React\r\n          </button>\r\n          <div className=\"collapse\" id=\"category2-collapse\">\r\n            <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\r\n              <li><NavLink exact to=\"/category2\" className=\"link-dark rounded\"> Intro</NavLink></li>\r\n              <li><NavLink exact to=\"/category2/sub\" className=\"link-dark rounded\"> LifeCyle</NavLink></li>\r\n              <li><NavLink exact to=\"/category2/sub1\" className=\"link-dark rounded\"> Event</NavLink></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li className=\"mb-1\">\r\n          <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#category3-collapse\" aria-expanded=\"false\">\r\n             Posts\r\n          </button>\r\n          <div className=\"collapse\" id=\"category3-collapse\">\r\n            <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\r\n              <li><NavLink exact to=\"/category3\" className=\"link-dark rounded\"> Post Page</NavLink></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        {/* <li className=\"border-top my-3\"></li>\r\n        <li className=\"mb-1\">\r\n          <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#account-collapse\" aria-expanded=\"false\">\r\n            Account\r\n          </button>\r\n          <div className=\"collapse\" id=\"account-collapse\">\r\n            <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\r\n              <li><a href=\"#\" className=\"link-dark rounded\">New...</a></li>\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Profile</a></li>\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Settings</a></li>\r\n              <li><a href=\"#\" className=\"link-dark rounded\">Sign out</a></li>\r\n            </ul>\r\n          </div>\r\n        </li> */}\r\n      </ul>\r\n      <Modal\r\n      show={this.state.show}\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>접근제한 패스워드 입력</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      {/* <Form>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleConfirmPassword}/>\r\n        </Form.Group>\r\n      </Form> */}\r\n          <div className=\"form-group\">\r\n            \r\n            <input type=\"password\" name=\"password\" className=\"form-control\" \r\n            value={this.state.password}\r\n            onChange={this.handleConfirmPassword} />\r\n          </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <GoButton password={this.state.password} btnCallback={handleClose}/>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        {/* <Button variant=\"primary\" onClick={handleSubmit}>Ok</Button> */}\r\n      </Modal.Footer>\r\n    </Modal>\r\n    </div>\r\n\r\n//         <div className=\"menu-container\">\r\n// <Accordion defaultActiveKey=\"0\">\r\n//   <Card>\r\n//     <Card.Header className=\"wp100\">\r\n//     <NavLink exact to=\"/\" className=\"nav-title\">\r\n//       <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"0\">\r\n//         Home\r\n//       </Accordion.Toggle>\r\n//       </NavLink>\r\n//     </Card.Header>\r\n//   </Card>\r\n//   <Card>\r\n//     <Card.Header>\r\n//       <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"1\">\r\n//       <div className=\"nav-title\"> About</div>\r\n//       </Accordion.Toggle>\r\n//     </Card.Header>\r\n//     <Accordion.Collapse eventKey=\"1\">\r\n//       <Card.Body className=\"nav-sub nav-title\">\r\n//         <ul>\r\n//           <li><NavLink exact to=\"/about\" className=\"nav-title\">About 1</NavLink></li>\r\n//           <li><NavLink to=\"/about/sub\" className=\"nav-title\">About 2</NavLink></li>\r\n//         </ul>\r\n//       </Card.Body>\r\n//     </Accordion.Collapse>\r\n//   </Card>\r\n//   <Card>\r\n//     <Card.Header>\r\n//       <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"2\">\r\n//       Category1\r\n//       </Accordion.Toggle>\r\n//     </Card.Header>\r\n//     <Accordion.Collapse eventKey=\"2\">\r\n//       <Card.Body className=\"nav-sub  nav-title\">\r\n//         <ul>\r\n//           <li><NavLink to=\"/category1\" className=\"nav-title\">sub category1</NavLink></li>\r\n//           <li><NavLink to=\"/category1/sub\" className=\"nav-title\">sub category2</NavLink></li>\r\n//         </ul>\r\n//       </Card.Body>\r\n//     </Accordion.Collapse>\r\n//   </Card>\r\n//   <Card>\r\n//     <Card.Header>\r\n//       <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"4\">\r\n//       Category2\r\n//       </Accordion.Toggle>\r\n//     </Card.Header>\r\n//     <Accordion.Collapse eventKey=\"4\">\r\n//       <Card.Body className=\"nav-sub  nav-title\">\r\n//         <ul>\r\n//           <li><NavLink to=\"/category2\" className=\"nav-title\">sub category1</NavLink></li>\r\n//           <li><NavLink to=\"/category2/foo\" className=\"nav-title\">sub category2</NavLink></li>\r\n//         </ul>\r\n//       </Card.Body>\r\n//     </Accordion.Collapse>\r\n//   </Card>\r\n//   <Card>\r\n//     <Card.Header>\r\n//       <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"3\">\r\n//       <NavLink to=\"/posts\" className=\"nav-title\">Posts</NavLink>\r\n      \r\n//       </Accordion.Toggle>\r\n//     </Card.Header>\r\n//     <Accordion.Collapse eventKey=\"3\">\r\n//       <Card.Body className=\"nav-sub\">\r\n//         <Route path=\"/posts\" component={PostList}/>\r\n//       </Card.Body>\r\n//     </Accordion.Collapse>\r\n//   </Card>\r\n// </Accordion>\r\n// </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Sidebar;","import React, { useEffect  } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Home, About, Posts, Category1, Category2, Category3, Footer } from '../pages';\r\nimport { Switch } from 'react-router-dom/cjs/react-router-dom.min';\r\n// import Menu from '../components/Menu/Navigation';\r\nimport Sidebar from '../components/Menu/Sidebar';\r\nimport './Background.css';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport { NavLink } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    _getHello();\r\n  }, []);\r\n  const _getHello = async() => {\r\n    // const res = await axios.get('/api/hello');\r\n    // console.log('_getHello--', res);\r\n  }\r\n  return (\r\n    <div>\r\n        {/* <div className=\"app-header\">\r\n        </div> */}\r\n<header className=\"p-3 bg-dark text-white\">\r\n<div className=\"container\">\r\n<div className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\">\r\n{/* <a href=\"/\" className=\"d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none\">\r\n  <svg className=\"bi me-2\" width=\"40\" height=\"32\" role=\"img\" aria-label=\"Bootstrap\"><use xlink:href=\"#bootstrap\"></use></svg>\r\n</a> */}\r\n\r\n<ul className=\"nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0\">\r\n  <li><NavLink exact to=\"/\" className=\"nav-link px-2 text-white\">Home</NavLink></li>\r\n  {/* <li><NavLink exact to=\"/\" className=\"nav-link px-2 text-secondary\">Home</NavLink></li> */}\r\n  {/* <li><a href=\"#\" className=\"nav-link px-2 text-white\">Features</a></li>\r\n  <li><a href=\"#\" className=\"nav-link px-2 text-white\">Pricing</a></li>\r\n  <li><a href=\"#\" className=\"nav-link px-2 text-white\">FAQs</a></li> */}\r\n  <li><a href=\"#\" className=\"nav-link px-2 text-white\">About</a></li>\r\n</ul>\r\n\r\n{/* <form className=\"col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3\">\r\n  <input type=\"search\" className=\"form-control form-control-dark\" placeholder=\"Search...\" aria-label=\"Search\">\r\n</form> */}\r\n\r\n{/* <div className=\"text-end\">\r\n  <button type=\"button\" className=\"btn btn-outline-light me-2\">Login</button>\r\n  <button type=\"button\" className=\"btn btn-warning\">Sign-up</button>\r\n</div> */}\r\n</div>\r\n</div>\r\n</header>\r\n\r\n\r\n    <div className=\"app-container\">\r\n        <Sidebar />\r\n        <div className=\"content-container overflow-auto\">\r\n        <Route exact path=\"/\" component={Home}/>\r\n        <Switch>\r\n          <Route path=\"/about/:name\" component={About}/>\r\n          <Route path=\"/about\" component={About}/>\r\n        </Switch>\r\n        <Switch>\r\n          <Route path=\"/category1/:name\" component={Category1}/>\r\n          <Route path=\"/category1\" component={Category1}/>\r\n        </Switch>\r\n        <Switch>\r\n          <Route path=\"/category2/:name\" component={Category2}/>\r\n          <Route path=\"/category2\" component={Category2}/>\r\n        </Switch>\r\n        <Route path=\"/category3\" component={Category3}/>\r\n        <Route path=\"/posts\" component={Posts}/>\r\n        </div>\r\n    </div>\r\n    <div className=\"app-bottom\">\r\n        <Footer />\r\n    </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from '../shared/App';\r\n\r\nconst Root = () => (\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './client/Root';\r\n// import registerServiceWorker from './serviceWorker';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n// import { setupWorker, rest } from 'msw'\r\nconst { worker } = require('./mocks/browser')\r\nif (process.env.NODE_ENV === 'development') {\r\nconsole.log(process.env.NODE_ENV)\r\n  worker.start()\r\n}\r\n// const renderApp = () =>\r\n//   worker.start().then(() => {\r\n//     worker.printHandlers();\r\n//     ReactDOM.render(<Root />, document.getElementById('root'));\r\n//   });\r\n\r\n// renderApp();\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\nserviceWorker.register();\r\n// registerServiceWorker();","import { rest } from 'msw';\r\n\r\n// export const handlers = [\r\n//   rest.get(\r\n//     'https://api.github.com/users/mj5543',\r\n//     (req, res, ctx) => {\r\n//       return res(\r\n//         ctx.status(200),\r\n//         ctx.json({\r\n//           userId: 1234,\r\n//           id: 101,\r\n//           title: 'Hello MSW!',\r\n//           body: 'This is mocked response by handlers.ts',\r\n//         }),\r\n//       );\r\n//     },\r\n//   ),\r\n// ];\r\nexport const handlers = [\r\n  rest.get(\r\n    'https://api.github.com/users/mj5543',\r\n// 'https://jsonplaceholder.typicode.com/posts/100',\r\n    async (req, res, ctx) => {\r\n      const data = await ctx.fetch(req);\r\n      return res(\r\n        ctx.json({\r\n          ...data,\r\n          title: 'Title has been mocked',\r\n        }),\r\n      );\r\n    },\r\n  ),\r\n];\r\n// const userWorker = setupWorker(\r\n//   rest.get('https://api.github.com/users/mj5543', async (req, res, ctx) => {\r\n//     // Perform an original request to the intercepted request URL\r\n//     const originalResponse = await ctx.fetch(req)\r\n//     const originalResponseData = await originalResponse.json()\r\n//     return res(\r\n//       ctx.json({\r\n//         location: originalResponseData.location,\r\n//         firstName: 'Not the real first name',\r\n//       }),\r\n//     )\r\n//   }),\r\n// )\r\n// userWorker.start()","import { setupWorker } from 'msw'\r\nimport { handlers }  from './handlers'\r\n// This configures a Service Worker with the given request handlers.\r\nexport const worker = setupWorker(...handlers)"],"sourceRoot":""}