{"version":3,"sources":["components/main/Main.js","pages/Home.js","pages/Footer.js","pages/About.js","pages/Post.js","pages/Posts.js","pages/Category1.js","pages/Category2.js","components/Menu/sub/PostList.js","components/Menu/Navigation.js","shared/App.js","client/Root.js","serviceWorker.js","index.js"],"names":["Main","className","href","Home","Footer","About","location","match","query","queryString","parse","search","console","log","params","name","Post","id","Posts","exact","path","url","render","component","Category1","scope","colSpan","Category2","PostList","class","to","Navigation","Accordion","defaultActiveKey","Card","Header","Toggle","variant","eventKey","Collapse","Body","App","type","Component","Root","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c81d8c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Main.css';\r\n\r\nconst Main = () => {\r\n    \r\n    return (\r\n        <div className=\"main\">\r\n           {/* <div className=\"card card-content\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Card title</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                <a href=\"#\" className=\"card-link\">Detail</a>\r\n            </div>\r\n            </div> */}\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card title</h5>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"card-link\">Detail</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Special title treatment</h5>\r\n                        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport Main from '../components/main/Main';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n          <Main />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n         <b> contact</b><br />@emal\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport queryString from 'query-string';\r\n\r\nconst About = ({location, match}) => {\r\n    const query = queryString.parse(location.search);\r\n    console.log(query);\r\n    return (\r\n        <div>\r\n            <h2>About {match.params.name}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Post = ({match}) => {\r\n    return (\r\n        <div>\r\n            포스트 {match.params.id}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Post from './Post'; \r\n\r\nconst Posts = ({match}) => {\r\n    return (\r\n        <div>\r\n           {/* <ul>\r\n                <li><Link to={`${match.url}/1`}>Post #1</Link></li>\r\n                <li><Link to={`${match.url}/2`}>Post #2</Link></li>\r\n                <li><Link to={`${match.url}/3`}>Post #3</Link></li>\r\n                <li><Link to={`${match.url}/4`}>Post #4</Link></li>\r\n           </ul> */}\r\n           <Route exact path={match.url} render={()=>(<h3>Please select any post</h3>)}/>\r\n           <Route path={`${match.url}/:id`} component={Post}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react';\r\nimport queryString from 'query-string';\r\n\r\nconst Category1 = ({location, match}) => {\r\n    const query = queryString.parse(location.search);\r\n    console.log(query);\r\n    return (\r\n        <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">First</th>\r\n            <th scope=\"col\">Last</th>\r\n            <th scope=\"col\">Handle</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td colSpan=\"2\">Larry the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n};\r\n\r\nexport default Category1;","import React from 'react';\r\nimport queryString from 'query-string';\r\n\r\nconst Category2 = ({location, match}) => {\r\n    const query = queryString.parse(location.search);\r\n    console.log(query);\r\n    return (\r\n        <div>\r\n            <h2>Category2 {match.params.name}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Category2;","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Post from '../../../pages/Post'; \r\n\r\nconst PostList = ({match}) => {\r\n    return (\r\n        <div class=\"nav-title\">\r\n           <ul>\r\n                <li><Link to={`${match.url}/1`} className=\"nav-title\">Post #1</Link></li>\r\n                <li><Link to={`${match.url}/2`} className=\"nav-title\">Post #2</Link></li>\r\n                <li><Link to={`${match.url}/3`} className=\"nav-title\">Post #3</Link></li>\r\n                <li><Link to={`${match.url}/4`} className=\"nav-title\">Post #4</Link></li>\r\n           </ul>\r\n           {/* <Route exact path={match.url} render={()=>(<h3>Please select any post</h3>)}/> */}\r\n           {/* <Route path={`${match.url}/:id`} component={Post}/> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;","import React, { useState, useContext, callback } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Menu.css';\r\n// import { Posts } from '../../pages';\r\nimport PostList from './sub/PostList';\r\n// import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\n// function ContextAwareToggle({ children, eventKey, callback }) {\r\n//     const currentEventKey = useContext(AccordionContext);\r\n  \r\n//     const decoratedOnClick = useAccordionToggle(\r\n//       eventKey,\r\n//       () => callback && callback(eventKey),\r\n//     );\r\n  \r\n//     const isCurrentEventKey = currentEventKey === eventKey;\r\n  \r\n//     return (\r\n//         <button class=\"btn btn-secondary dropdown-toggle\" onClick={() => decoratedOnClick} data-target=\"#collapseOne\" aria-expanded={open} aria-controls=\"collapseOne\">\r\n//           {children}\r\n//         </button>\r\n//     );\r\n//   }\r\nconst Navigation = () => {\r\n    // const activeStyle = {\r\n    //     color: '#666',\r\n    //     fontSize: '1.5rem'\r\n    // };\r\n    // const [open, setOpen] = useState(false);\r\n    return (\r\n        // <div className=\"menu-container\">\r\n        //     <ul>\r\n        //         <li><NavLink exact to=\"/\" activeStyle={activeStyle}>Home</NavLink></li>\r\n        //         <li><NavLink exact to=\"/about\" activeStyle={activeStyle}>About</NavLink></li>\r\n        //         <li><NavLink to=\"/about/foo\" activeStyle={activeStyle}>About Foo</NavLink></li>\r\n        //         <li><NavLink to=\"/posts\" activeStyle={activeStyle}>Posts</NavLink></li>\r\n        //     </ul>\r\n        // </div>\r\n        <div className=\"menu-container\">\r\n<Accordion defaultActiveKey=\"0\">\r\n  <Card>\r\n    <Card.Header className=\"wp100\">\r\n    <NavLink exact to=\"/\" className=\"nav-title\">\r\n      <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"0\">\r\n        Home\r\n      </Accordion.Toggle>\r\n      </NavLink>\r\n    </Card.Header>\r\n    {/* <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body className=\"nav-sub\">Hello! I'm the body</Card.Body>\r\n    </Accordion.Collapse> */}\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"1\">\r\n      <div className=\"nav-title\"> About</div>\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body className=\"nav-sub nav-title\">\r\n        <ul>\r\n          <li><NavLink exact to=\"/about\" className=\"nav-title\">About 1</NavLink></li>\r\n          <li><NavLink to=\"/about/sub\" className=\"nav-title\">About 2</NavLink></li>\r\n        </ul>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"2\">\r\n      Category1\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"2\">\r\n      <Card.Body className=\"nav-sub  nav-title\">\r\n        <ul>\r\n          <li><NavLink to=\"/category1\" className=\"nav-title\">sub category1</NavLink></li>\r\n          <li><NavLink to=\"/category1/sub\" className=\"nav-title\">sub category2</NavLink></li>\r\n        </ul>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"4\">\r\n      Category2\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"4\">\r\n      <Card.Body className=\"nav-sub  nav-title\">\r\n        <ul>\r\n          <li><NavLink to=\"/category2\" className=\"nav-title\">sub category1</NavLink></li>\r\n          <li><NavLink to=\"/category2/foo\" className=\"nav-title\">sub category2</NavLink></li>\r\n        </ul>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle className=\"btn btn-secondary wp100\" variant=\"link\" eventKey=\"3\">\r\n      <NavLink to=\"/posts\" className=\"nav-title\">Posts</NavLink>\r\n      \r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"3\">\r\n      <Card.Body className=\"nav-sub\">\r\n      {/* <NavLink to=\"/posts\" className=\"nav-title\">Posts</NavLink> */}\r\n        <Route path=\"/posts\" component={PostList}/>\r\n        {/* <PostList /> */}\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n</div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Home, About, Posts, Category1, Category2, Footer } from '../pages';\r\nimport { Switch } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Menu from '../components/Menu/Navigation';\r\nimport './Background.css';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <div className=\"app-header\">\r\n                </div> */}\r\n<header className=\"p-3 bg-dark text-white\">\r\n    <div className=\"container\">\r\n      <div className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\">\r\n        {/* <a href=\"/\" className=\"d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none\">\r\n          <svg className=\"bi me-2\" width=\"40\" height=\"32\" role=\"img\" aria-label=\"Bootstrap\"><use xlink:href=\"#bootstrap\"></use></svg>\r\n        </a> */}\r\n\r\n        <ul className=\"nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0\">\r\n          <li><a href=\"#\" className=\"nav-link px-2 text-secondary\">Home</a></li>\r\n          <li><a href=\"#\" className=\"nav-link px-2 text-white\">Features</a></li>\r\n          <li><a href=\"#\" className=\"nav-link px-2 text-white\">Pricing</a></li>\r\n          <li><a href=\"#\" className=\"nav-link px-2 text-white\">FAQs</a></li>\r\n          <li><a href=\"#\" className=\"nav-link px-2 text-white\">About</a></li>\r\n        </ul>\r\n\r\n        {/* <form className=\"col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3\">\r\n          <input type=\"search\" className=\"form-control form-control-dark\" placeholder=\"Search...\" aria-label=\"Search\">\r\n        </form> */}\r\n\r\n        <div className=\"text-end\">\r\n          <button type=\"button\" className=\"btn btn-outline-light me-2\">Login</button>\r\n          <button type=\"button\" className=\"btn btn-warning\">Sign-up</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n\r\n\r\n            <div className=\"app-container\">\r\n                <Menu />\r\n                <div className=\"content-container overflow-auto\">\r\n                <Route exact path=\"/\" component={Home}/>\r\n                <Switch>\r\n                  <Route path=\"/about/:name\" component={About}/>\r\n                  <Route path=\"/about\" component={About}/>\r\n                </Switch>\r\n                <Switch>\r\n                  <Route path=\"/category1/:name\" component={Category1}/>\r\n                  <Route path=\"/category1\" component={Category1}/>\r\n                </Switch>\r\n                <Switch>\r\n                  <Route path=\"/category2/:name\" component={Category2}/>\r\n                  <Route path=\"/category2\" component={Category2}/>\r\n                </Switch>\r\n                <Route path=\"/posts\" component={Posts}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"app-bottom\">\r\n                <Footer />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from '../shared/App';\r\n\r\nconst Root = () => (\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './client/Root';\r\n// import registerServiceWorker from './serviceWorker';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n// registerServiceWorker();"],"sourceRoot":""}